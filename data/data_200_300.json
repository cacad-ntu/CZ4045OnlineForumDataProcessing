[
    {
        "pos": "Another vote for Launch4J, just wrote an ant task this morning to integrate with one of my projects.  Seems to work really well\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Consider converting your application to Eclipse RCP.  It is written in SWT, and the Eclipse IDE contains packaging tools that generate executables for all major platforms.  For windows, it can generate a zip or a folder containing your code.  For a common installation experience, I'd using NSIS.  There is actually a packages generator project at eclipse to create common installers for all platforms eclipse supports.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "To follow up on pauxu's answer, I'm using launch4j and NSIS on a project of mine and thought it would be helpful to show just how I'm using them.  Here's what I'm doing for Windows.  BTW, I'm creating .app and .dmg for Mac, but haven't figured out what to do for Linux yet.\nProject Copies of launch4j and NSIS\nIn my project I have a \"vendor\" directory and underneath it I have a directory for \"launch4j\" and \"nsis\".  Within each is a copy of the install for each application.  I find it easier to have a copy local to the project rather than forcing others to install both products and set up some kind of environment variable to point to each.\nScript Files\nI also have a \"scripts\" directory in my project that holds various configuration/script files for my project.  First there is the launch4j.xml file:\n\nAnd then there's the NSIS script rpgam-setup.nsis.  It can take a VERSION argument to help name the file.\n\nAnt Integration\nI have some targets in my Ant buildfile (build.xml) to handle the above.  First I tel Ant to import launch4j's Ant tasks:\n\nI then have a simple target for creating the wrapper executable:\n\nAnd another target for making the installer:\n\nThe top portion of that just copies the necessary files for the installer to a temporary location and the second half executes the script that uses all of it to make the installer.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I have used JSmooth in the past, and still have luck with it.  The UI is pretty buggy, but I only use that for building the config file once, and then I build from Ant after that.\nWhat issues are you having with JSmooth?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I have read through several reviews on Amazon and some books seem outdated.  I am currently using MyEclipse 6.5 which is using Eclipse 3.3.  I'm interested in hearing from people that have experience learning RCP and what reference material they used to get started.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Although I don't have personal experience, a few friends of mine did Eclipse RCP development, and they used the book \"Eclipse Rich Client Platform: Designing, Coding, and Packaging Java(TM) Applications\". They seemed to like it a lot, and I looked it at myself, and it seemed useful. If I was going to do RCP development on Eclipse, I would probably get this book.\nTo clarify - this book is geared toward Eclipse 3.1, and since I haven't done any RCP development of my own, I'm not sure how much things have changed.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I read the book suggested by Thomas and it's really worth reading, although not very up-to-date.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I've been doing Eclipse RCP development for almost 2 years now.  When I first started, I wanted a book for help and many people told me, with Eclipse you're better off using the Eclipsepedia and Google.\nHowever, I started with \"The Java Developer's Guide to Eclipse\" by D'Anjou et al, and I still reference it when I need a better starting point or a good reference.  It's probably a little outdated now, but is very thorough and really explains how the Eclipse framework works.  Like just about anything, RCP isn't too hard to pick up if you've figured out how the framework supporting it works and you'll get a lot more mileage out of your code.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I agree with Thomas Owens on \"Eclipse Rich Client Platform: Designing, Coding, and Packaging Java(TM) Applications\" and would also add \"Eclipse: Building Commercial-Quality Plug-ins\" to the list of rather outdated but still somewhat useful books on Eclipse RCP. Even though the latter does not go much into the Rich Client Platform, it explains quite a lot about the Eclipse plug-in architecture that is useful knowledge for developers of RCP applications.\nThere has been a lot of improvements in the Eclipse RCP platform since the release of both of these books, so I really hope that there are new versions of these books coming out soon.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "At my work we are running a group of tests that consist of about 3,000 separate test cases. Previously we were running this entire test suite on one machine, which took about 24-72 hours to complete the entire test run. We now have created our own system for grouping and distributing the tests among about three separate machines and the tests are prioritized so that the core tests get run first for more immediate results and the extra tests run when there is an available machine.\nI am curious if anyone has found a good way to distribute their tests among several machines to reduce total test time for a complete run and what tools were used to achieve that. I've done some research and it looks like TestNG is moving in this direction, but it looks like it is still under quite a bit of development. \nWe don't plan on rewriting any of our tests, but as we add new tests and test new products or add-ons I'd like to be able to deal with the fact that we are working with very large numbers of tests. On the other hand, if we can find a tool that would help distribute our Junit 3.x tests even in a very basic fashion, that would be helpful since we wouldn't have to maintain our own tooling to do that.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I've seen some people having a play with distributed JUnit. I can't particularly vouch for how effective it is, but the other teams I've seen seemed to think it was straight forward enough. Hope that helps.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Our build people use Mozilla Tinderbox.  It seems to have some hooks for distributed testing.  I'm sorry not to know the details but I thought I would at least pass on the pointer to you.\nIt's also nice coz you can find out immediately when a build breaks, and what checkin might have been the culprit.\nhttp://www.mozilla.org/tinderbox.html\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "There's also parallel-junit. Depending on how you currently execute your tests its convenience may vary - the idea is just to multithread on a single system that has multiple cores. I've played with it briefly, but it's a change from how we currently run our tests. \nHudson, the continuous integration engine I use, also has some ways to distribute test running (separate jobs aggregated results in one).\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I need to prevent Session Fixation, a particular type of session hijacking, in a Java web application running in JBoss. However, it appears that the standard idiom doesn't work in JBoss. Can this be worked around?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "This defect (found here) points the way to the solution. The Tomcat instance that runs in JBoss is configured with emptySessionPath=\"true\", rather than \"false\", which is the default. This can be modified in .../deploy/jboss-web.deployer/server.xml; both the HTTP and AJP connectors have this option.\nThe feature itself is used to eliminate the context path (eg. \"foo\" in http://example.com/foo) from being included in the JSESSIONID cookie. Setting it to false will break applications that rely on cross-application authentication, which includes stuff built using some portal frameworks. It didn't negatively affect the application in question, however.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I'm currently trying to get into the Java EE development with the Spring framework. As I'm new to Spring, it is hard to imaging how a good running project should start off.\nDo you have any best practices, tipps or major DO NOTs for a starter? How did you start with Spring - big project or small tutorial-like applications? Which technology did you use right away: AOP, complex Hibernate...\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Whilst its been years since I have used spring, and I can't say I am a fan of it, I know that the App Fuse tool (https://java.net/projects/appfuse/) has been helpful to help people bootstrap in terms of generating all the artifacts you need to get going.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Focus first on the heart of Spring: Dependency Injection. Once you see all the ways that DI can be used, then start thinking about the more interesting pieces like AOP, Remoting, JDBC Templates etc. So my best bit of advice is let your use of Spring grow out from the core.\nBest practice? If you're using the standard XML config, manage the size of individual files and comment them judiciously. You may think that you and others will perfectly understand your bean definitions, but in practice they're somewhat harder to come back to than plain old java code.\nGood luck!\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I actually quite liked Spring.. It was a fresh breeze of air in your average J2EE Java Beans..\nI recommend implementing the example Spring provides: \nhttp://static.springframework.org/docs/Spring-MVC-step-by-step/\nAlso, I decided to go full monty and added Hibernate to my Spring application ;), because Spring provides excellent support for Hibernate... :)\nI do have a DON'T however, which I learned the hard way (product in production)... If you only implement the Controller interface, and return a ModelAndView object with some data as provided with the interface, Spring does garbadge collect those resources, for tries to cache those data. So be careful to put large data in those ModelAndView objects, because they will hog up your server memory for as long as the server is in the air as soon as that page has been viewed...\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "A good way to get started is to concentrate on the \"Springframework\". The Spring portfolio has grown to a big pile of projects around various aspects of Enterprise Software. Stick to the core at the beginning and try to grasp the concepts. Download the latest binaries and check out Spring's petclinic example once you are familiar with the core. It gives quite a good overview of the various projects SpringSource has to offer.\nAlthough the documentation is very good, I'd recommend a book after you grasp the concepts of the core. What I've found problematic with the documentation, is that it's not in depth and can't give you all the details you need.  \n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Spring is also very much about unit testing and therefore testability of your classes. That basically means thinking about modularization, separation of concerns, referencing a class through interfaces etc.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "If you're just looking to dabble in it a bit and see if you like it, I recommend starting with the DAO layer, using Spring's JDBC and/or Hibernate support. This will expose you to a lot of the core concepts, but do so in a way that is easy to isolate from the rest of your app. This is the route I followed, and it was good warm-up before getting into building a full application with Spring.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Start here - I actually think it's among the best Software Dev books that I've read.\nExpert Spring MVC And Web Flow\nLearn the new Annotation-based configuration for MVC classes. This is part of Spring 2.5. Using Annotation-based classes is going to make writing Unit tests a heck of a lot easier. Also being able to cut down on the amount of XML is a good thing.\nOh yeah Unit Tests - if you're using Spring, you BETTER be Unit Testing. :) Write Unit tests for all of your Web and Service Layer classes. \nRead up on Domain Driven Design. The fact that you can use Domain Object classes at all levels of a Spring Application means you're going to have a VERY powerful Domain Model. Leverage it.\nHowever, when using your Domain Object classes for form population, you will want to take heed of the recent security concerns around the Spring Framework. A discussion on the Server Side reveals the way to close the hole in the comments.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Small tip - I've found it helpful to modularize and clearly label my Spring xml context files based on application concern. Here's an example for a web app I worked on:\n\nMyProject / src / main / resources / spring /\n\ndatasource.xml  -  My single data source bean.\npersistence.xml  -  My DAOs/Repositories. Depends on datasource.xml beans.\nservices.xml  -  Service layer implementations. These are usually the beans to which I apply transactionality using AOP. Depends on persistence.xml beans.\ncontrollers.xml  - My Spring MVC controllers. Depends on services.xml beans.\nviews.xml - My view implementations.\n\n\nThis list is neither perfect nor exhaustive, but I hope it illustrates the point. Choose whatever naming strategy and granularity works best for you.\nIn my (limited) experience, I've seen this approach yeild the following benefits:\nClearer architecture\nClearly named context files gives those unfamiliar with your project structure a reasonable \nplace to start looking for bean definitions. Can make detecting circular/unwanted dependencies a little easier.\nHelps domain design\nIf you want to add a bean definition, but it doesn't fit well in any of your context files, perhaps there's a new concept or concern emerging? Examples:\n\nSuppose you want to make your Service layer transactional with AOP. Do you add those bean definitions to services.xml, or put them in their own transactionPolicy.xml? Talk it over with your team. Should your transaction policy be pluggable?\nAdd Acegi/Spring Security beans to your controllers.xml file, or create a security.xml context file? Do you have different security requirements for different deployments/environments?\n\nIntegration testing\nYou can wire up a subset of your application for integration testing (ex: given the above files, to test the database you need to create only datasource.xml and persistence.xml beans).\nSpecifically, you can annotate an integration test class as such:\n\nWorks well with Spring IDE's Beans Graph\nHaving lots of focused and well-named context files makes it easy to create custom BeansConfigSets to visualize the layers of your app using Spring IDE's Beans Graph. I've used this before to give new team members a high-level overview of our application's organization.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Can anyone recommend a good binary XML format? It's for a JavaME application, so it needs to be a) Easy to implement on the server, and b) Easy to write a low-footprint parser for on a low-end JavaME client device.\nAnd it goes without saying that it needs to be smaller than XML, and faster to parse.\n\nThe data would be something akin to SVG.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "What kind of data are you planning to use? I would say, that if the server is also done in Java, easiest way for small footprint is to send/receive binary data in predefined format. Just write everything in known order into DataOutputStream.\nBut it would really depend, what what kind of data are you working on and can you define the format.\nActually you should evaluate, if this kind of optimization is even needed. Maybe you target devices are not so limited.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "You might want to take a look at wbxml (Wireless Binary XML) it is optimized for size, and often used on mobile phones, but it is not optimized for parsing speed.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "It very much depends on the target device. If you have JSR172 available, then you are done with the parsing, the runtime does it for you. And XML is mainly about making your own format. As was alredy stated if your goal is performance, than XML is probably not the best way to go and you will end up doing some binary stuff.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Hessian might be an alternative worth looking at. It is a small protocol, well-suited for Java ME applications. \n\"Hessian is a binary web service protocol that makes web services usable without requiring a large framework, and without learning a new set of protocols. Because it is a binary protocol, it is well-suited to sending binary data without any need to extend the protocol with attachments.\"\nMore links:\nhttp://hessian.caucho.com/\nhttp://www.nubius.be/info-software/hessian4j.html\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "We need to add WorkFlow to our Spring managed application. Does anyone have any useful experience in using any of the myriad of OSS Work Flow solutions? Which one is best? Which one integrates with Spring best? Which ones should we avoid?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "If you only need some simple process orchestration, Spring's own Web Flow, despite its name can serve as a orchestration task manager.   If you need to preserve state for several days then you will need to become an 'early adopter' of one of the open-source projects.  You may want to look at Eclipse's BPEL project.  \nMy hunch is that once a clearer picture of the BPEL/BPM/Workflow space emerges you will see Spring provide an abstraction layer the same way they have for JDBC, Transactions, ORM frameworks etc... \n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "We're looking at Drools/Guvnor, possibly integrated with jBPM (as in this presentation), to add a workflow engine to our Spring/Java EE app, but we're still in the very early phases of trying it out.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I second Spring Web Flow. Depending on how complex the process is, Web Flow is great for managing various states and I've found that it's pretty easy to pick up and there's a good amount of documentation out there for it.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Like Brian said if you're doing anything of great complexity you might look at using BPEL. \nThere are a number of open source BPEL engines, one that comes to mind is Apache Orchestration Director Engine \n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I have a base class that represents a database test in TestNG, and I want to specify that all classes extending from this class are of a group \"db-test\", however I have found that this doesn't seem possible.  I have tried the @Test annotation:\n\nHowever, this doesn't work because the @Test annotation will try to make a bunch of methods into tests, and warnings/errors pop up in eclipse when the tests are run.\nSo I tried disabling the test, so at least the groups are assigned:\n\nbut then any @BeforeTest (and other similar annotations) ALSO get disabled... which is of course not what I want.\nI would like some way to annotate a class as being of a particular type of group, but it doesn't quite seem possible in TestNG.  Does anyone have any other ideas?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I'm not sure how the annotation inheritance works for TestNG but this article may be of some use. http://beust.com/weblog/archives/000170.html. \nActually, this may help better http://testng.org/doc/documentation-main.html#annotations, look at inheritGroups.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "TestNG will run all the public methods from a class with a @Test annotation. Maybe you could change the methods you don't want TestNG to run to be non-public\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "You can specify the @Test annotation at method level that allows for maximum flexibility.\n\nDoes this works for you or I am missing something from your question.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "It would seem to me as the following code-challenge (community wiki post):\nHow to be able to execute all test methods of Extended class from the group 'aGlobalGroup' without:\n\nspecifying the 'aGlobalGroup' group on the Extended class itself ?\ntesting non-annotated public methods of Extended class ?\n\nThe first answer is easy:\nadd a class TestNG(groups = { \"aGlobalGroup\" }) on the Base class level\nThat group will apply to all public methods of both Base class and Extended class.\nBUT: even non-testng public methods (with no TestNG annotation) will be included in that group.\nCHALLENGE: avoid including those non-TestNG methods.\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "The answer is through a custom org.testng.IMethodSelector:\nIts includeMethod() can exclude any method we want, like a public not-annotated method.\nHowever, to register a custom Java MethodSelector, you must add it to the XMLTest instance managed by any TestRunner, which means you need your own custom TestRunner.\nBut, to build a custom TestRunner, you need to register a TestRunnerFactory, through the -testrunfactory option.\nBUT that -testrunfactory is NEVER taken into account by TestNG class... so you need also to define a custom TestNG class :\n\nin order to override the configure(Map) method, \nso you can actually set the TestRunnerFactory\nTestRunnerFactory which will build you a custom TestRunner,\nTestRunner which will set to the XMLTest instance a custom XMLMethodSelector\nXMLMethodSelector which will build a custom IMethodSelector\nIMethodSelector which will exclude any TestNG methods of your choosing!\n\nOk... it's a nightmare. But it is also a code-challenge, so it must be a little challenging ;)\nAll the code is available at DZone snippets.\nAs usual for a code challenge:\n\none java class (and quite a few inner classes)\ncopy-paste the class in a 'source/test' directory (since the package is 'test')\nrun it (no arguments needed)\n\n\nUpdate from Mike Stone:\nI'm going to accept this because it sounds pretty close to what I ended up doing, but I figured I would add what I did as well.\nBasically, I created a Groups annotation that behaves like the groups property of the Test (and other) annotations.\nThen, I created a GroupsAnnotationTransformer, which uses IAnnotationTransformer to look at all tests and test classes being defined, then modifies the test to add the groups, which works perfectly with group exclusion and inclusion.\nModify the build to use the new annotation transformer, and it all works perfectly!\nWell... the one caveat is that it doesn't add the groups to non-test methods... because at the time I did this, there was another annotation transformer that lets you transform ANYTHING, but it somehow wasn't included in the TestNG I was using for some reason... so it is a good idea to make your before/after annotated methods to alwaysRun=true... which is sufficient for me.\nThe end result is I can do:\n\nAnd I made the transformer work with subclassing and everything.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I'd like to utilize an ICE Faces fileInput control to fill in the file path & file name for the input to an input field on a web page based on file that the user selects. How can I capture these properties without actually performing any file transfer operations?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I believe that the real answer is that you can't.  The file path won't be sent by the browser for security reasons.  The file name will be sent, however I don't believe it gets sent without an actual upload.\nThe closest you could come, afaik, would be to forcibly kill the connection just when the upload starts.  That would net you the filename with little actual transferred data, but it doesn't sound like it would be useful to you.\nAlternatively, a signed Java applet might get you closer to a solution that you'd want.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "What's the best way to make a linked list in Java?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Java has a LinkedList implementation, that you might wanna check out. You can download the JDK and it's sources at java.sun.com.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Use java.util.LinkedList. Like this:\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "The obvious solution to developers familiar to Java is to use the LinkedList class already provided in java.util. Say, however, you wanted to make your own implementation for some reason. Here is a quick example of a linked list that inserts a new link at the beginning of the list, deletes from the beginning of the list and loops through the list to print the links contained in it. Enhancements to this implementation include making it a double-linked list, adding methods to insert and delete from the middle or end, and by adding get and sort methods as well. \nNote: In the example, the Link object doesn't actually contain another Link object -  nextLink is actually only a reference to another link. \n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I am having a strange DB2 issue when I run DBUnit tests.  My DBUnit tests are highly customized, but I don't think it is the issue.  When I run the tests, I get a failure: \n\nSQLCODE: -1084, SQLSTATE: 57019\n\nwhich translates to \n\nSQL1084C Shared memory segments cannot be allocated.\n\nIt sounds like a weird memory issue, though here's the big strange thing.  If I ssh to the test database server, then go in to db2 and do \"connect to MY_DB\", the tests start succeeding!  This seems to have no relation to the supposed memory error that is being reported.\nI have 2 tests, and the first one actually succeeds, the second one is the one that fails.  However, it fails in the DBUnit setup code, when it is obtaining the connection to the DB server to load my xml dataset.\nAny ideas what might be going on?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Well, I think I fixed it by doing the following:\n\nAt least, things seem to be working now.....\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I'm currently trying to read in an XML file, make some minor changes (alter the value of some attributes), and write it back out again.\nI have intended to use a StAX parser (javax.xml.stream.XMLStreamReader) to read in each event, see if it was one I wanted to change, and then pass it straight on to the StAX writer (javax.xml.stream.XMLStreamReader) if no changes were required.\nUnfortunately, that doesn't look to be so simple - The writer has no way to take an event type and a parser object, only methods like writeAttribute and writeStartElement. Obviously I could write a big switch statement with a case for every possible type of element which can occur in an XML document, and just write it back out again, but it seems like a lot of trouble for something which seems like it should be simple.\nIs there something I'm missing that makes it easy to write out a very similar XML document to the one you read in with StAX?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "After a bit of mucking around, the answer seems to be to use the Event reader/writer versions rather than the Stream versions.\n(i.e. javax.xml.stream.XMLEventReader and javax.xml.stream.XMLEventWriter)\nSee also http://www.devx.com/tips/Tip/37795, which is what finally got me moving.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "StAX works pretty well and is very fast. I used it in a project to parse XML files which are up to 20MB. I don't have a thorough analysis, but it was definitely faster than SAX. \nAs for your question: The difference between streaming and event-handling, AFAIK is control. With the streaming API you can walk through your document step by step and get the contents you want. Whereas the event-based API you can only handle what you are interested in.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I have been looking into IKVMing Apache's FOP project to use with our .NET app.  It's a commercial product, and looking into licensing, IKVM runs into some sticky areas because of its use of GNU Classpath.  From what I've seen, no one can say for sure if this stuff can be used in a commercial product.  Has anyone used IKVM, or an IKVM'd product, in a commercial product?  Here's what I've found so far:\nIKVM license page, which notes that one dll contains code from other projects, their license GPLv2 + Classpath Exception\nSaxon for .NET is generated with IKVM, but released under the Apache license...\nAnyone have experience with this?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I'm not a lawyer but all licenses mentioned are okay to be used in commercial products as long as you don't make any changes and claim the code is yours. \nI think if you don't wanna risk anything you should consult a lawyer.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "There are multiple issues here as ikvm is currently being transitioned away from the GNU classpath system to Sun's OpenJDK.  Both are licensed as GPL+Exceptions to state explicitly that applications which merely use the OpenJDK libraries will not be considered derived works.\nGenerally speaking, applications which rely upon components with defined specs such as this do not fall under the GPL anyway.  For example, linking against public POSIX APIs does not trigger GPL reliance in a Linux application, despite the kernel being GPL.  A similar principal will usually (the details can be tricky) apply to replacing Sun's Java with a FOSS/GPL implementation.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "In Java, there is no such thing as an unsigned byte.\nWorking with some low level code, occasionally you need to work with bytes that have unsigned values greater than 128, which causes Java to interpret them as a negative number due to the MSB being used for sign.\nWhat's a good way to work around this? (Saying don't use Java is not an option)\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I guess you could just use a short to store them.  Not very efficient, but really the only option besides some herculean effort that I have seen.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Probably your best bet is to use an integer rather than a byte.  It has the room to allow for numbers greater than 128 without the overhead of having to create a special object to replace byte.  \nThis is also suggested by people smarter than me (everybody)\n\nhttp://www.darksleep.com/player/JavaAndUnsignedTypes.html\nhttp://www.jguru.com/faq/view.jsp?EID=13647\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "When reading any single value from the array copy it into something like a short or an int and manually convert the negative number into the positive value it should be.\n\nYou can do a similar conversion when writing into the array.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "The best way to do bit manipulation/unsigned bytes is through using ints. Even though they are signed they have plenty of spare bits (32 total) to treat as an unsigned byte. Also, all of the mathematical operators will convert smaller fixed precision numbers to int. Example:\n\nBecause of this it is best to just stick with integer and mask it to get the bits that you are interested in. Example:\n\nHere is some more info on Java primitive types http://mindprod.com/jgloss/primitive.html\nOne last trivial note, there is one unsigned fixed precision number in Java. That is the char primitive.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Using ints is generally better than using shorts because java uses 32-bit values internally anyway (Even for bytes, unless in an array) so using ints will avoid unnecessary conversion to/from short values in the bytecode.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "@pauldoo\nIt is actually possible to get rid of the if statement and the addition if you do it like this.\n\nThis way Java doesn't interpret the byte as a negative number and flip the sign bit on the integer also.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I would like to automatically generate PDF documents from WebObjects based on mulitpage forms. Assuming I have a class which can assemble the related forms (java/wod files) is there a good way to then parse the individaul forms into a PDF instead of going to the screen?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I'm not familiar with WebObjects, but I see you have java listed in there.\niText is a java api for building pdfs. If you can access a java api from WebObjects you should be able to build pdfs that way.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "ScArcher2>>\nI have looked into different routes for creating PDFs on the fly including FOP and a few Java libraries. I think what I am really asking is if anyone has already done this in the WebObjects framework. My hope is that someone familiar with WebObjects might have done this already and have some insight that would save me some time. \n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "The canonical response when asked about PDFs from WebObjects has generally been ReportMill.    It's a PDF document generating framework that works a lot like WebObjects, and includes its own graphical PDF builder tool similar to WebObjects Builder and Interface Builder.  You can bind elements in your generated PDFs to dynamic data in your application just as you would for a WOComponent.\nThey have couple of tutorial videos on the ReportMill product page that should give you an idea of how the tool works.  It'll probably be a lot easier than trying to work with FOP programmatically.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I've used Apache CXF to expose about ten java classes as web services.\nI've generated clients using CXF, Axis, and .NET.\nIn Axis and CXF a \"Service\" or \"Locator\" is generated. \nFrom this service you can get a \"Port\".\nThe \"Port\" is used to make individual calls to the methods exposed by the web service.\nIn .NET the \"Service\" directly exposes the calls to the web service.\nCan someone explain the difference between a port, a service, a locator, and an endpoint when it comes to web services?\nAxis:\n\nCXF:\n\n.net:\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "As you already mentioned, those terms mean different things in different stacks - there is no one right generic answer for web services.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I'd hop over to http://www.w3.org/TR/wsdl.html which I think explains Port, Service and Endpoint reasonably well. A locator is an implementation specific mechanism that some WS stacks use to provide access to service endpoints.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I found the information based on Kevin Kenny's answer, but I figured I'd post it here for others.\nA WSDL document defines services as collections of network endpoints, or ports. In WSDL, the abstract definition of endpoints and messages is separated from their concrete network deployment or data format bindings. This allows the reuse of abstract definitions: messages, which are abstract descriptions of the data being exchanged, and port types which are abstract collections of operations. The concrete protocol and data format specifications for a particular port type constitutes a reusable binding. A port is defined by associating a network address with a reusable binding, and a collection of ports define a service. Hence, a WSDL document uses the following elements in the definition of network services:\n\nTypes\u2013 a container for data type definitions using some type system (such as XSD).\nMessage\u2013 an abstract, typed definition of the data being communicated.\nOperation\u2013 an abstract description of an action supported by the service.\nPort Type\u2013an abstract set of operations supported by one or more endpoints.\nBinding\u2013 a concrete protocol and data format specification for a particular port type.\nPort\u2013 a single endpoint defined as a combination of a binding and a network address.\nService\u2013 a collection of related endpoints.\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "How can I determine the IP of my router/gateway in Java? I can get my IP easily enough. I can get my internet IP using a service on a website. But how can I determine my gateway's IP?\nThis is somewhat easy in .NET if you know your way around. But how do you do it in Java?\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "That is not as easy as it sounds.  Java is platform independent, so I am not sure how to do it in Java.  I am guessing that .NET contacts some web site which reports it back.  There are a couple ways to go.  First, a deeper look into the ICMP protocol may give you the information you need.  You can also trace the IP you go through (your route).  When you encounter an IP that is not in the following ranges:\n\n10.0.0.0 \u2013 10.255.255.255\n172.16.0.0 \u2013 172.31.255.255\n192.168.0.0 \u2013 192.168.255.255\n\nit is the IP one hop away from yours, and probably shares a few octets of information with your IP.\nBest of luck.  I'll be curious to hear a definitive answer to this question.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Try shelling out to traceroute if you have it.\n'traceroute -m 1 www.amazon.com' will emit something like this:\n\nParse the second line.  Yes, it's ugly, but it'll get you going until someone posts something nicer.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "You may be better off using something like checkmyip.org, which will determine your public IP address - not necessarily your first hop router: at Uni I have a \"real\" IP address, whereas at home it is my local router's public IP address.\nYou can parse the page that returns, or find another site that allows you to just get the IP address back as the only string.\n(I'm meaning load this URL in Java/whatever, and then get the info you need).\nThis should be totally platform independent.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Matthew: Yes, that is what I meant by \"I can get my internet IP using a service on a website.\" Sorry about being glib.\nBrian/Nick: Traceroute would be fine except for the fact that lots of these routers have ICMP disabled and thus it always stalls.\nI think a combination of traceroute and uPnP will work out. That is what I was planning on doing, I as just hoping I was missing something obvious.\nThank you everyone for your comments, so it sounds like I'm not missing anything obvious. I have begun implementing some bits of uPnP in order to discover the gateway.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Java doesn't make this as pleasant as other languages, unfortunately. Here's what I did:\n\nThis presumes that the gateway is the second token and not the third. If it is, you need to add an extra st.nextToken(); to advance the tokenizer one more spot.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Regarding UPnP: be aware that not all routers support UPnP. And if they do it could be switched off (for security reasons). So your solution might not always work.\nYou should also have a look at NatPMP.\nA simple library for UPnP can be found  at http://miniupnp.free.fr/, though it's in C...\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "To overcome the issues mentioned with traceroute (ICMP-based, wide area hit) you could consider:\n\ntraceroute to your public IP (avoids wide-area hit, but still ICMP)\nUse a non-ICMP utility like ifconfig/ipconfig (portability issues with this though).\nWhat seems the best and most portable solution for now is to shell & parse netstat (see the code example here) \n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "On windows parsing the output of IPConfig will get you the default gateway, without waiting for a trace.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "On Windows, OSX, Linux, etc then Chris Bunch's answer can be much improved by using \n\nin place of a traceroute command.\nYour gateway's IP address will appear in the second field of the line that starts either default or 0.0.0.0.\nThis gets around a number of problems with trying to use traceroute:\n\non Windows traceroute is actually tracert.exe, so there's no need for O/S dependencies in the code\nit's a quick command to run - it gets information from the O/S, not from the network\ntraceroute is sometimes blocked by the network\n\nThe only downside is that it will be necessary to keep reading lines from the netstat output until the right line is found, since there'll be more than one line of output.\nEDIT: The Default Gateway's IP Address is in the second field of the line that starts with 'default' if you are on a MAC (tested on Lion), or in the third field of the line that starts with '0.0.0.0' (tested on Windows 7)\nWindows:\n\n\nNetwork Destination        Netmask          Gateway       Interface  Metric\n0.0.0.0              0.0.0.0    192.168.2.254     192.168.2.46     10\n\n\nMac:\n\n\nDestination        Gateway            Flags        Refs      Use   Netif Expire\ndefault            192.168.2.254      UGSc          104        4     en1\n\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "You can query the URL \"http://whatismyip.com/automation/n09230945.asp\".\nFor example:\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I wonder if anyone uses commercial/free java obfuscators on his own commercial product. I know only about one project that actually had an obfuscating step in the ant build step for releases.\nDo you obfuscate? And if so, why do you obfuscate?\nIs it really a way to protect the code or is it just a better feeling for the developers/managers?\nedit: Ok, I to be exact about my point: Do you obfuscate to protect your IP (your algorithms, the work you've put into your product)? I won't obfuscate for security reasons, that doesn't feel right. So I'm only talking about protecting your applications code against competitors.\n@staffan has a good point:\n\nThe reason to stay away from chaining code flow is that some of those changes makes it impossible for the JVM to efficiently optimize the code. In effect it will actually degrade the performance of your application.\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I guess it really comes down to what your Java code is for, how it's distributed and who your clients are. We don't obfuscate anything, as we've never found one that was particularly good and it tends to be more trouble than it's worth. If someone has access to our JAR files and has the knowledge to be able to sniff around inside them, then there's far more worrying things that they can do than rip off our source code.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I use proguard for JavaME development. It's not only very very good at making jar files smaller (Essential for mobile) but it is useful as a nicer way of doing device-specific code without resorting to IDE-unfriendly preprocessing tools such as antenna.\nE.g.\n\nThis gets compiled, obfuscated, and the class file ends up as though you had written:\n\nSo you can have variants of code to work around manufacturer bugs in JVM/library implementations without bulking out the final executable class files.\nI believe that some commercial obfuscators can also merge class files together in certain cases. This is useful because the more classes you have, the larger the size overhead you have in the zip (jar) file.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "If you do obfuscate, stay away from obfuscators that modify the code by changing code flow and/or adding exception blocks and such to make it hard to disassemble it. To make the code unreadable it is usually enough to just change all names of methods, fields and classes.\nThe reason to stay away from changing code flow is that some of those changes makes it impossible for the JVM to efficiently optimize the code. In effect it will actually degrade the performance of your application. \n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "I spent some time this year trying out various Java obfuscators, and I found one to be miles ahead of the rest: JBCO. It's unfortunately a bit cumbersome to set up, and has no GUI, but in terms of the level of obfuscation it produces, it is unparalleled. You try feeding it a simple loop, and if your decompiler doesn't crash trying to load it, you will see something like this:\n\nYou didn't know Java had goto's? Well, the JVM supports them =)\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "OK, so I don't want to start a holy-war here, but we're in the process of trying to consolidate the way we handle our application configuration files and we're struggling to make a decision on the best approach to take. At the moment, every application we distribute is using it's own ad-hoc configuration files, whether it's property files (ini style), XML or JSON (internal use only at the moment!).\nMost of our code is Java at the moment, so we've been looking at Apache Commons Config, but we've found it to be quite verbose. We've also looked at XMLBeans, but it seems like a lot of faffing around. I also feel as though I'm being pushed towards XML as a format, but my clients and colleagues are apprehensive about trying something else. I can understand it from the client's perspective, everybody's heard of XML, but at the end of the day, shouldn't be using the right tool for the job?\nWhat formats and libraries are people using in production systems these days, is anyone else trying to avoid the angle bracket tax?\nEdit: really needs to be a cross platform solution: Linux, Windows, Solaris etc. and the choice of library used to interface with configuration files is just as important as the choice of format.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "What platform are you working on? I'd recommend trying to use the preferred/common method for it.\n\nMacOSX - plists\nWin32 - Registry (or are there a new one here, long since I developed on it)\nLinux/Unix - ~/.apprc (name-value perhaps)\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "As far as I know, the Windows registry is no longer the preferred way of storing configuration if you are using .NET - most applications now make use of System.Configuration [1, 2]. Since this is also XML based it seems to be that everything is moving in the direction of using XML for configuration.\nIf you want to stay cross-platform I would say that using some sort of a text file would be the best route to go. As for the formatting of said file, you might want to take into account if a human is going to be manipulating it or not. XML seems to be a bit more friendly to manual manipulation than INI files due to the visible structure of the file.\nAs for the angle bracket tax - I don't worry about it too often as the XML libraries take care of abstracting it. The only time it might be a consideration is if you have very little storage space to work with and every byte counts.\n[1] System.Configuration Namespace - http://msdn.microsoft.com/en-us/library/system.configuration.aspx\n[2] Using Application Configuration Files in .NET - http://www.developer.com/net/net/article.php/3396111\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Without starting a new holy war, the sentiments of the 'angle bracket tax' post is one area where I majorly disagree with Jeff. There's nothing wrong with XML, it's reasonably human readable (as much as YAML or JSON or INI files are) but remember its intent is to be read by machines. Most language/framework combos come with an XML parser of some sort for free which makes XML a pretty good choice. \nAlso, if you're using a good IDE like Visual Studio, and if the XML comes with a schema, you can give the schema to VS and magically you get intellisense (you can get one for NHibernate for example).\nUlimately you need to think about how often you're going to be touching these files once in production, probably not that often.\nThis still says it all for me about XML and why it's still a valid choice for config files (from Tim Bray):\n\"If you want to provide general-purpose data that the receiver might want to do unforeseen weird and crazy things with, or if you want to be really paranoid and picky about i18n, or if what you\u2019re sending is more like a document than a struct, or if the order of the data matters, or if the data is potentially long-lived (as in, more than seconds) XML is the way to go. \nIt also seems to me that the combination of XML and XPath hits a sweet spot for data formats that need to be extensible; that is to say, it\u2019s pretty easy to write XML-processing code that won\u2019t fail in the presence of changes to the message format that don\u2019t touch the piece you care about.\"\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "We are using properties files, simply because Java supports them natively. A couple of months ago I saw that SpringSource Application Platform uses JSON to configure their server and it looks very interesting. I compared various configuration notations and came to the conclusion that XML seems to be the best fit at the moment. It has nice tools support and is rather platform independent.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "We are using ini style config files. We use the Nini library to manage them. Nini makes it very easy to use. Nini was orignally for .NET but it has been ported to other platforms using Mono.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Re: epatel's comment\nI think the original question was asking about application configuration that an admin would be doing, not just storing user preferences.  The suggestions you gave seem more for user prefs than application config, and aren't usually something that the user would ever deal with directly (the app should provide the configuration options in the UI, and then update the files).  I really hope you'd never make the user have to view/edit the Registry. :)\nAs for the actual question, I'd say XML is probably OK, as plenty of people will be used to using that for configuration.  As long as you organize the configuration values in an easy to use manner then the \"angle bracket tax\" shouldn't be too bad.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "XML XML XML XML.  We're talking config files here.  There is no \"angle bracket tax\" if you're not serializing objects in a performance-intense situation.  \nConfig files must be human readable and human understandable, in addition to machine readable.  XML is a good compromise between the two.\nIf your shop has people that are afraid of that new-fangled XML technology, I feel bad for you.  \n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "@Herms\nWhat I really meant was to stick to the recommended way software should store configuration values for any given platform. \nWhat you often get then is also the recommended ways these should/can be modified. Like a configuration menu in a program or a configuration panel in a \"system prefs\" application (for system services softwares ie). Not letting the end users modify them directly via RegEdit or NotePad...\nWhy?\n\nThe end users (=customers) are used to their platforms\nSystem for backups can better save \"safe setups\" etc\n\n@ninesided\nAbout \" choice of library \", try to link in (static link) any selected library to lower the risk of getting into a version-conflict-war on end users machines.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "YAML, for the simple reason that it makes for very readable configuration files compared to XML.\nXML:\n\nYAML:\n\nThe examples were taken from this page: http://www.kuro5hin.org/story/2004/10/29/14225/062\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "XML, JSON, INI.\nThey all have their strengths and weaknesses.\nIn an application context, I feel that the abstraction layer is the important thing.\nIf you can choose a way to structure the data that is a good middle ground between human readability and how you want to access/abstract the data in code, you're golden.  \nWe mostly use XML where I work, and I cant really believe that a configuration file loaded into a cache as objects when first read or after it has been written to, and then abstracted away from the rest of the program, really is that much of a hit on neither CPU nor disk space.\nAnd it is pretty readable too, as long as you structure the file right.\nAnd all languages on all platforms supports XML through some pretty common libraries.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "First: This is a really big debate issue, not a quick Q+A.\nMy favourite right now is to simply include Lua, because\n\nI can permit things like width=height*(1+1/3)\nI can make custom functions available\nI can forbid anything else. (impossible in, for instance, Python (including pickles.))\nI'll probably want a scripting language somewhere else in the project anyway.\n\nAnother option, if there's a lot of data is to use sqlite3, because they're right to claim\n\nSmall.\nFast.\nReliable.\n\nChoose any three.\nTo which I would like to add:\n\nbackups are a snap. (just copy the db file.)\neasier to switch to another db, ODBC, whatever. (than it is from fugly-file)\n\nBut again, this is a bigger issue. A \"big\" answer to this probably involves some kind of feature matrix or list of situations like:\nAmount of data, or short runtime\n\nFor large amounts of data, you might want efficient storage, like a db.\nFor short runs (often), you might want something that you don't need to do a lot of parsing for, consider something that can be mmap:ed in directly.\n\nWhat does the configuration relate to?\n\nHost:\n\n\nI like YAML in /etc. Is that reimplemented in windows?\n\nUser:\n\n\nDo you permit users to edit config with text editor?\nShould it be centrally manageable? Registry / gconf / remote db?\nMay the user have several different profiles?\n\nProject:\n\n\nFile(s) in project directory? (Version control usually follows this model...)\n\n\nComplexity\n\nAre there only a few flat values? Consider YAML.\nIs the data nested, or dependent in some way? (This is where it gets interesting.)\nMight it be a desirable feature to permit some form of scripting?\nTemplates can be viewed as a kind of configuration files..\n\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "Maybe a bit of a tangent here but my opinion is that the config file should be read into a key value dictionary/hash table when the app first starts up and always accessed via this object from then on for speed. Typically the key/value table starts off as string to string but helper functions in the object do things such DateTime GetConfigDate(string key) etc...\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    },
    {
        "pos": "@Guy\nBut application config isn't always just key/value pairs.  Look at something like the tomcat configuration for what ports it listens on.  Here's an example:\n\nYou can have any number of connectors.  Define more in the file and more connectors exist.  Don't define any more and no more exist.  There's no good way (imho) to do that with plain old key/value pairs.\nIf your app's config is simple, then something simple like an INI file that's read into a dictionary is probably fine.  But for something more complex like server configuration, an INI file would be a huge pain to maintain, and something more structural like XML or YAML would be better.  It all depends on the problem set.\n",
        "negation_label": 0,
        "error_label": 0,
        "semantic_label": 0
    }
]