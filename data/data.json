{"list_string": ["I was thinking in using some tools to convert the JAR into an APK. But will my Nexus One have enough memory? And what about the controls?\n", "It turns out that Java has a security flaw that is currently being exploited to put malware on people's computers. Is there any risk that advertisements in Android apps will have embedded, malicious Java code in them? If so, how can I make sure to update whatever runs the Java in those ads once Oracle releases a security patch?\n", "When using Google Chrome mobile (or any other android web browser) is the Javascript VM running on top of the Java VM? Or is the JS code compiled to Java bytecode?\nI ask this because JS seems to run obnoxiously slower on Android using Google Chrome vs a PC. Granted a PC is much faster, but I have a Galaxy S3 which should be on par with a 2yr old netbook right? \n", "nb. I can disable them using 3rd party root apps without any discernible negative effects.\n \nAre these networking protocols default? They seem to be harmless but everything I read about sit0 seems to suggest it's no longer used.\n\nThis looks like some serious networking issues to my layman's eye. Yes or no?\n\n(click image to enlarge)\nI have 100s or 1000s of logcat messages where a request for Neighboring Cell IDs is denied. Is this some kind of worm attempt being blocked by policy?\n\n(click image to enlarge)\n", "I recently got a bluetooth keyboard for my Motorola Xoom tablet, and upon realizing that BusyBox comes with vi for text editing I started wondering about writing and executing code on android.\nI tried running $ javac in Terminal Emulator but to no avail; I got javac: not found\nI looked around a bit and found a post saying that since android is run on Dalvik there is no way for the JVM to run, but it seems counter-intuitive that an operating system built on java wouldn't be able to compile and run a java program.\nI managed to find an app called AIDE that allows one to write and execute android apps (in java), but that's still not quite what I'm looking for.\nI want to be able to compile and run a standard java command line application on android.\nDoes anybody know a way of doing this?\n", "How can i make the notification/statusbar for Android 4.3 transparent, i know launchers like Dodol Launcher, Smart Launcher and Go Launcher has a transparent bar option. But i want it to be like it is in Android 5.0's notificationbar, so if the bar is light blue the statusbar becomes a little darker blue color.\ni don't mean to do it in like Youtube, i mean if you can program it into an Android app, like this import system.ui.transparentbar\n", "Suposse that we have a java source file. In Terminal Emulator we can use javac command to compile and java command to run the program.\nMy question is that,\nif we have java compiler, Can we compile and run the program inside a Terminal Emulator Running on Android device ?\n", "I've been bumbling a while to go to an another activity through a button but it don't work for me. I have my app that I wanted to do here put aside and a new made to look at it how. I did everything as they said on the website (http://www.c-sharpcorner.com/UploadFile/ef3808/how-to-open-new-activity-on-click-button-by-existing-activi/) I just keep getting an error when I click on the button.\nError message:\nE/AndroidRuntime: FATAL EXCEPTION: main\n              Process: com.example.simon.demo, PID: 3278\n              android.content.ActivityNotFoundException: No Activity found to handle Intent { act=AnotherActivity }\n                  at android.app.Instrumentation.checkStartActivityResult(Instrumentation.java:1809)\n                  at android.app.Instrumentation.execStartActivity(Instrumentation.java:1523)\n                  at android.app.Activity.startActivityForResult(Activity.java:4224)\n                  at android.app.Activity.startActivityForResult(Activity.java:4183)\n                  at android.app.Activity.startActivity(Activity.java:4507)\n                  at android.app.Activity.startActivity(Activity.java:4475)\n                  at com.example.simon.demo.MainActivity$1.onClick(MainActivity.java:19)\n                  at android.view.View.performClick(View.java:5610)\n                  at android.view.View$PerformClick.run(View.java:22265)\n                  at android.os.Handler.handleCallback(Handler.java:751)\n                  at android.os.Handler.dispatchMessage(Handler.java:95)\n                  at android.os.Looper.loop(Looper.java:154)\n                  at android.app.ActivityThread.main(ActivityThread.java:6077)\n                  at java.lang.reflect.Method.invoke(Native Method)\n                  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:865)\n                  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)\n\nCode:\nMain Activity\n    package com.example.simon.demo;\n\nimport android.os.Bundle;\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.view.Menu;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.widget.Button;\npublic class MainActivity extends Activity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        OnClickListener listnr=new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent i= new Intent(\"AnotherActivity\");\n                startActivity(i);\n            }\n        };\n        Button btn =(Button) findViewById(R.id.btn);\n        btn.setOnClickListener(listnr);\n    }\n}\n\nAnother Activity:\n    package com.example.simon.demo;\n\n    /**\n     * Created by Simon on 11-12-2016.\n     */\n\n    import android.app.Activity;\n    import android.os.Bundle;\n    public class AnotherActivity extends Activity{\n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n            // TODO Auto-generated method stub\n            super.onCreate(savedInstanceState);\n            setContentView(R.layout.activity_another);\n        }\n    }\n\nAndroidMainifest:\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.simon.demo\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\" >\n    <uses-sdk\n        android:minSdkVersion=\"8\"\n        android:targetSdkVersion=\"17\" />\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:theme=\"@style/AppTheme\" >\n        <activity\n            android:name=\"com.example.simon.demo.MainActivity\"\n            android:label=\"@string/app_name\" >\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\".AnotherActivity\"\n            android:label=\"@string/app_name\">\n            <intent-filter >\n                <action  android:name=\"in.wptrafficanalyzer.AnotherActivity\"/>\n                <category  android:name=\"android.intent.category.DEFAULT\"/>\n            </intent-filter>\n        </activity>\n    </application>\n</manifest>\n\nActivity_main.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\" >\n    <TextView\n        android:layout_width=\"125dp\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/hello_world\" />\n    <Button\n        android:id=\"@+id/btn\"\n        android:layout_width=\"134dp\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/lblBtn\" />\n</LinearLayout>\n\nActivity_another.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\" >\n    <TextView\n        android:id=\"@+id/txt\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"@string/lblTxt\"\n        />\n</LinearLayout>\n\n", "After entering the final command to make a mixed-format SD card in How can I move apps to SD on non-adopted Marshmallow storage?:\n\n$ adb shell sm partition disk:179,64 mixed 25\n\nI meet this error:\n\nError: java.lang.IllegalStateException: java.util.concurrent.TimeoutException: Thread Binder_C gave up waiting for partitionMixed after 180000ms\n\nIf it is 75, then the error is:\n\nError: java.lang.IllegalStateException: java.util.concurrent.TimeoutException: Thread Binder_4 gave up waiting for partitionMixed after 180000ms\n\nHow can I fix this? Only 3 results appear in Google, and neither of them helps.\n\nPhone: Sony Xperia M4 Aqua Dual \nSD card: SanDisk Ultra micro SDHC UHS-1 Card 16 GB, class 10\n\n", "Under what condition could the code sample below crash your application? How would you modify the code to avoid this potential problem? \nIntent sendIntent = new Intent();\nsendIntent.setAction(Intent.ACTION_SEND);\nsendIntent.putExtra(Intent.EXTRA_TEXT, textMessage);\nsendIntent.setType(HTTP.PLAIN_TEXT_TYPE); // \"text/plain\" MIME type\nstartActivity(sendIntent);\n\n", "I understand that android does not use a JRE and Google has build a platform only for android. But an android device is not really different from e.g a Raspberry PI. So why is it not possible to just install Oracles JVM on a rooted android device?\n", "Android cannot just \"run\" native Java applications. Android does not have a Java Virtual Machine. Android uses a Dalvik Virtual Machine, which is completely different. \nWhile android applications are written in Java, it is a \"subset\" of actual Java. so even if you could run the jar files through a \"converter\", there is no guarantee the code is actually supported by Dalvik.\n", "I know nothing about Minecraft but I can't see how it would be possible without rewriting big chunks of it.  Even if you can convert the JAR to an .apk, there are many Java classes that are not part of the Android API.  Furthermore, Android does not include AWT, Swing or Java 2D/3D, it has its own UI and graphics APIs, so the user interface would need to be rewritten.\n", "Minecraft Pocket Edition is available in the Google Play Store and Amazon's Appstore. Engadget has a  hands-on of the game, and \"SonyEricssonDev\" has a video showing Minecraft being played on the Xperia Play.\n", "You can run a JAR provided that is a midlet for mobile (j2ME)\nThere are some JVM available in the market. I used them a lot in the early days of my G1 for some \"killer apps\" (Opera Mini, QQ)\n", "Apps for Android are compiled into a dalvik, machine code like format before they can be run on the device.\nThis means that everything is compiles, and things like Java etc cannot be updated on the device - as the device doesn't actually use Java.\nIt could be possible for malicious code to be installed into an Android app, however Google Play does check all apps for malicious code on upload, so you should be safe as long as you download from Google Play.\n", "The Javascript engine in Android's Browser/WebView can be either JavaScriptCore (lower end phones) or V8 (higher end phones). Chrome also uses V8. Both engines are written in C++.\nJavascript is never compiled to Java bytecode, instead it is interpreted and/or JIT compiled into ARM bytecode.\nMy guess on why V8 on PC is much faster than V8 on Android is probably because JIT compilation to x86 is more mature than JIT compilation to ARM.\n", "\"Why\" is not a question well suited for our site, as it probably is a speculative question and such off topic (see our [FAQ]). Although, a short technical explanation: The company building your ROM decided such.\n\"How can I disable them\" would be better fitting, and even has answers:\nIf you cannot disable them from Settings\u2192Apps\u2192Manage Apps, you will need to root your device. Having done that, there are several apps available allowing you to \"freeze\" unwanted system apps. The most well-known of them is Titanium Backup which, as a side-effect, provides you with a powerful backup solution. Another candidate for that is App Quarantine ROOT/FREEZE.\n", "Well, what do you mean by a regular Java program? I don't think that anything beyond the basic namespaces and libraries are supported and supported on android. So even if you were to find javac, it's unlikely that you'd be able to \"full\" Java programs on an android device. \n", "I found an app on the play store that let me answer this question. Below are the steps I used to get javac and java running.\nInstall Terminal IDE\nGo to the play store and install Terminal IDE, this supports everything needed to write and run java applications: vim, javac, and java.\nOnce the app is installed, make sure you open the app and go to Install System to install everything needed.\nCompile and Run Program\nNow press the Terminal IDE button to open the terminal.\nUse vim to write and save your hello world program.\nThen to execute it has to be compiled to a JAR file:\n# javac hello.java\n# dx --dex --output=hello.jar hello.class\n# java -jar hello.jar hello\n\nPitfalls\nWhen I first tried to compile and execute I got\nUNEXPECTED TOP-LEVEL EXCEPTION:\njava.lang.RuntimeException: hello.class: file not readable\n\nThis issue was fixed by compiling and running as superuser. Here's the full terminal output of my issue\nterminal++@192.168.1.30:~$ javac hello.java\nterminal++@192.168.1.30:~$ dx --dex --output=hello.jar hello.class\n\nUNEXPECTED TOP-LEVEL EXCEPTION:\njava.lang.RuntimeException: hello.class: file not readable\n        at com.android.dx.util.FileUtils.readFile(FileUtils.java:63)\n        at com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:139)\n        at com.android.dx.cf.direct.ClassPathOpener.process(ClassPathOpener.java:113)\n        at com.android.dx.command.dexer.Main.processOne(Main.java:247)\n        at com.android.dx.command.dexer.Main.processAllFiles(Main.java:183)\n        at com.android.dx.command.dexer.Main.run(Main.java:139)\n        at com.android.dx.command.dexer.Main.main(Main.java:120)\n        at com.android.dx.command.Main.main(Main.java:89)\n        at com.spartacusrex.spartacuside.external.dx.main(dx.java:14)\n        at dalvik.system.NativeStart.main(Native Method)\n1 error; aborting\nterminal++@192.168.1.30:~$ su\n# dx --dex --output=hello.jar hello.class\n# java -jar hello.jar hello\nHello world\n#\n\nMore Information\nEverything you could possibly want to know can be found in the Help section of the Terminal IDE app, especially in the Java sections of the Tutorial. \n", "If your device is rooted you could install Tinted Statusbar (Xposed). This will do what you want.\n", "First of all - device must be rooted (which of course voids warranty) for having transparent status bar and navigation bar too. And yes, as @Adem said  Xposed Framework is the popular way to do that. After that you have to do some workaround for proper functioning of the app. There are some tutorials based on this on XDA-Dev website. Also, there are high chances of soft-bricking the phone in the process.\n", "This app should be able to do it for you: https://play.google.com/store/apps/details?id=com.spartacusrex.spartacuside&hl=en\nSupposedly, you can just run the javac command in this app like you would on your computer.\n", "There may be numerous reasons about this...\nOnClickListener listnr=new OnClickListener() {\n  @Override public void onClick(View v) {\n    Intent i = new Intent(MainActivity.this, AnotherActivity.class); startActivity(i);\n  }\n};\n\n", "It is because the SD card is mounted to have an ext4 partition (alongside with another normal partition), in order to use Link2SD to force moving unmovable apps to SD card. The error shows up after this. Even reformatting the SD card to have only one full partition back does not solve the problem.\nTo solve it, reformatting it with the phone default format tool. You may want to reboot the phone after done. Thereafter, you can partition the disk with adb as normal.\n", "An implicit intent specifies an action that can invoke any app on the device able to perform the action. Using an implicit intent is useful when your app cannot perform the action, but other apps probably can. If there is more than one application registered that can handle this request, the user will be prompted to select which one to use.\nHowever, it is possible that there are no applications that can handle your intent. In this case, your application will crash when you invoke startActivity(). To avoid this, before calling startActivity() you should first verify that there is at least one application registered in the system that can handle the intent. To do this use resolveActivity() on your intent object:\n// Verify that there are applications registered to handle this intent\n// (resolveActivity returns null if none are registered)\nif (sendIntent.resolveActivity(getPackageManager()) != null) {\n    startActivity(sendIntent);\n} \n\nAlso read this developer blog also read toptal blogs about java it's a very common question.\n", "\nWhy is it not possible to just install Oracles JVM on a rooted android device?\n\n\nYou simply don't just install something on Android. Installing apps requires a bunch of stuff.\nAlso: You can't just install ordinary applications, frameworks etc like on a PC (there are apps that allow this in their own container).\nThere is an ongoing dispute between Oracle (Java) and Google (Android) about Java APIs and code. (https://en.wikipedia.org/wiki/Oracle_America,_Inc._v._Google,_Inc.)\nYou are already running a Java virtual machine that is integrated into the system (DalvikVM, Android Runtime ART) and is able to run basically all non-proprietary Java code (no sun package).\nIf you really want to run Java code, make a simple one button app that calls the code you want.\n\n"]}